buildscript {
    ext {
        springBootVersion = '3.2.0'
        springCloudVersion = '2022.0.4'
        cloudContractVersion = '4.0.4'
        testcontainersVersion = '1.19.1'
    }
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework.cloud:spring-cloud-contract-gradle-plugin:${cloudContractVersion}")
    }
}

plugins {
    id("com.gorylenko.gradle-git-properties") version "2.4.1"
    id("au.com.dius.pact") version "4.6.4"
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'spring-cloud-contract'
apply plugin: 'maven-publish'


group = 'com.bottega'
version = '1.0.0'
sourceCompatibility = '21'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply from: file('gradle/spring-cloud-contract.gradle')
apply from: file('gradle/test-suites.gradle')


dependencies {
    implementation project(':libs:SharedLib')

    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'io.vavr:vavr:0.10.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    testImplementation 'io.vavr:vavr-test:0.10.4'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'

    testImplementation platform("org.springframework.cloud:spring-cloud-contract-dependencies:${cloudContractVersion}")

    testImplementation project(':libs:SharedLib')
    testImplementation project(':libs:SharedLib').sourceSets.test.output
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'org.assertj:assertj-vavr:0.4.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    testImplementation 'au.com.dius.pact.provider:junit5:4.5.3'

    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'io.rest-assured:rest-assured:5.3.1'

    //spock
    testImplementation platform('org.apache.groovy:groovy-bom:4.0.15')
    testImplementation 'org.apache.groovy:groovy'
    testImplementation platform("org.spockframework:spock-bom:2.3-groovy-4.0")
    testImplementation "org.spockframework:spock-core"

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'au.com.dius.pact.consumer:junit5:4.5.3'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(Test) {
    testLogging {
        events = ["passed", "failed", "skipped"]
        exceptionFormat = "full"
    }
    systemProperties["pact.verifier.publishResults"] = System.getProperty("pact.verifier.publishResults", "false")
    systemProperties["pact.provider.version"] = System.getProperty("pact.provider.version")
    systemProperties["pact.provider.branchName"] = System.getProperty("pact.provider.branchName")
    systemProperties["pact.provider.tag"] = System.getProperty("pact.provider.tag")
    systemProperties["pact.rootDir"] = System.getProperty("pact.rootDir")

}

pact {

    broker {
        pactBrokerUrl = System.getenv("PACT_BROKER_BASE_URL")
        pactBrokerToken = System.getenv("PACT_BROKER_TOKEN")
    }

    publish {
        pactBrokerUrl = System.getenv("PACT_BROKER_BASE_URL")
    }

}

task wrapper(type: Wrapper){
    gradleVersion = '8.5'
}


pact {

    broker {
        pactBrokerUrl = System.getenv("PACT_BROKER_BASE_URL")
        pactBrokerToken = System.getenv("PACT_BROKER_TOKEN")
    }

    publish {
        pactDirectory = "build/pacts"
        pactBrokerUrl = System.getenv("PACT_BROKER_BASE_URL")
        consumerVersion = "1.0.4"
    }

}